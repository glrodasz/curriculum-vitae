{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/glrodasz/Code/curriculum-vitae/components/molecules/Job.js\",\n    _this = this;\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Item from \"./Item\";\nimport Logo from \"../atoms/Logo\";\nimport Heading from \"../atoms/Heading\";\nimport Paragraph from \"../atoms/Paragraph\";\nimport Link from \"../atoms/Link\";\n\nvar Job = function Job(_ref) {\n  var _career$achievements;\n\n  var career = _ref.career;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-3726623479\" + \" \" + \"job\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-3726623479\" + \" \" + \"header\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          logoName: career.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"https://\".concat(career.url),\n          weight: \"normal\",\n          children: career.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-3726623479\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"xs\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: career.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-3726623479\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"xs\",\n          children: \"Functions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: career.functions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), !!((_career$achievements = career.achievements) !== null && _career$achievements !== void 0 && _career$achievements.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jsx-3726623479\" + \" \" + \"achievements\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"xs\",\n          children: \"My achievements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-3726623479\" + \" \" + \"list\",\n          children: career.achievements.map(function (achievement) {\n            return /*#__PURE__*/_jsxDEV(Item, {\n              icon: \"diamond-alt\",\n              text: achievement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 43\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3726623479\",\n      children: \".job.jsx-3726623479{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;gap:25px;}.achievements.jsx-3726623479{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:10px;}.header.jsx-3726623479{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:15px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}@media (min-width:1140px){.job.jsx-3726623479{display:grid;grid-template-columns:repeat(2,1fr);gap:35px;}.achievements.jsx-3726623479{grid-column:2;grid-row:1/5;}.achievements.jsx-3726623479>.heading{margin-left:25px;}.header.jsx-3726623479{-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nbHJvZGFzei9Db2RlL2N1cnJpY3VsdW0tdml0YWUvY29tcG9uZW50cy9tb2xlY3VsZXMvSm9iLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Da0IsQUFHd0IsQUFPQSxBQU1BLEFBUUUsQUFNQyxBQUtHLEFBSU0sYUFkYyxDQU14QixHQUtmLFVBSkEsc0JBTlcsU0FDWCxnQkF2QnNCLEFBT0EsQUFNQSxtQ0F1QnRCLDJDQW5DdUIsQUFPZCxBQU1BLFNBTFgsQUFNcUIsMEZBYlYsR0FjWCxNQWJBIiwiZmlsZSI6Ii9Vc2Vycy9nbHJvZGFzei9Db2RlL2N1cnJpY3VsdW0tdml0YWUvY29tcG9uZW50cy9tb2xlY3VsZXMvSm9iLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IEl0ZW0gZnJvbSBcIi4vSXRlbVwiO1xuaW1wb3J0IExvZ28gZnJvbSBcIi4uL2F0b21zL0xvZ29cIjtcblxuaW1wb3J0IEhlYWRpbmcgZnJvbSBcIi4uL2F0b21zL0hlYWRpbmdcIjtcbmltcG9ydCBQYXJhZ3JhcGggZnJvbSBcIi4uL2F0b21zL1BhcmFncmFwaFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4uL2F0b21zL0xpbmtcIjtcblxuY29uc3QgSm9iID0gKHsgY2FyZWVyIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJqb2JcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkZXJcIj5cbiAgICAgICAgICA8TG9nbyBsb2dvTmFtZT17Y2FyZWVyLmxvZ299IC8+XG4gICAgICAgICAgPExpbmsgaHJlZj17YGh0dHBzOi8vJHtjYXJlZXIudXJsfWB9IHdlaWdodD1cIm5vcm1hbFwiPntjYXJlZXIudXJsfTwvTGluaz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEhlYWRpbmcgc2l6ZT1cInhzXCI+QWJvdXQ8L0hlYWRpbmc+XG4gICAgICAgICAgPFBhcmFncmFwaD57Y2FyZWVyLmFib3V0fTwvUGFyYWdyYXBoPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxIZWFkaW5nIHNpemU9XCJ4c1wiPkZ1bmN0aW9uczwvSGVhZGluZz5cbiAgICAgICAgICA8UGFyYWdyYXBoPntjYXJlZXIuZnVuY3Rpb25zfTwvUGFyYWdyYXBoPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7ISFjYXJlZXIuYWNoaWV2ZW1lbnRzPy5sZW5ndGggJiYgPGRpdiBjbGFzc05hbWU9XCJhY2hpZXZlbWVudHNcIj5cbiAgICAgICAgICA8SGVhZGluZyBzaXplPVwieHNcIj5NeSBhY2hpZXZlbWVudHM8L0hlYWRpbmc+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0XCI+XG4gICAgICAgICAgICB7Y2FyZWVyLmFjaGlldmVtZW50cy5tYXAoKGFjaGlldmVtZW50KSA9PiAoXG4gICAgICAgICAgICAgIDxJdGVtIGljb249XCJkaWFtb25kLWFsdFwiIHRleHQ9e2FjaGlldmVtZW50fSAvPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2Pn1cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuam9iIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgZ2FwOiAyNXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmFjaGlldmVtZW50cyB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGdhcDogMTBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5oZWFkZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBnYXA6IDE1cHg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTQwcHgpIHtcbiAgICAgICAgICAuam9iIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgICAgICAgICAgZ2FwOiAzNXB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5hY2hpZXZlbWVudHMge1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDI7XG4gICAgICAgICAgICBncmlkLXJvdzogMS81O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5hY2hpZXZlbWVudHMgPiA6Z2xvYmFsKC5oZWFkaW5nKSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMjVweDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuaGVhZGVyIHtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSm9iO1xuIl19 */\\n/*@ sourceURL=/Users/glrodasz/Code/curriculum-vitae/components/molecules/Job.js */\"\n    }, void 0, false, void 0, _this)]\n  }, void 0, true);\n};\n\n_c = Job;\nexport default Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["/Users/glrodasz/Code/curriculum-vitae/components/molecules/Job.js"],"names":["React","Item","Logo","Heading","Paragraph","Link","Job","career","logo","url","about","functions","achievements","length","map","achievement"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC1B,sBACE;AAAA,4BACE;AAAA,0CAAe,KAAf;AAAA,8BACE;AAAA,4CAAe,QAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEA,MAAM,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,oBAAaD,MAAM,CAACE,GAApB,CAAV;AAAqC,UAAA,MAAM,EAAC,QAA5C;AAAA,oBAAsDF,MAAM,CAACE;AAA7D;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE;AAAA;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,SAAD;AAAA,oBAAYF,MAAM,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAUE;AAAA;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,SAAD;AAAA,oBAAYH,MAAM,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,EAeG,CAAC,0BAACJ,MAAM,CAACK,YAAR,iDAAC,qBAAqBC,MAAtB,CAAD,iBAAiC;AAAA,4CAAe,cAAf;AAAA,gCAChC,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADgC,eAEhC;AAAA,8CAAe,MAAf;AAAA,oBACGN,MAAM,CAACK,YAAP,CAAoBE,GAApB,CAAwB,UAACC,WAAD;AAAA,gCACvB,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,aAAX;AAAyB,cAAA,IAAI,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,qBADuB;AAAA,WAAxB;AADH;AAAA;AAAA;AAAA;AAAA,iBAFgC;AAAA;AAAA;AAAA;AAAA;AAAA,eAfpC;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAsED,CAvED;;KAAMT,G;AAyEN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport Item from \"./Item\";\nimport Logo from \"../atoms/Logo\";\n\nimport Heading from \"../atoms/Heading\";\nimport Paragraph from \"../atoms/Paragraph\";\nimport Link from \"../atoms/Link\";\n\nconst Job = ({ career }) => {\n  return (\n    <>\n      <div className=\"job\">\n        <div className=\"header\">\n          <Logo logoName={career.logo} />\n          <Link href={`https://${career.url}`} weight=\"normal\">{career.url}</Link>\n        </div>\n        <div>\n          <Heading size=\"xs\">About</Heading>\n          <Paragraph>{career.about}</Paragraph>\n        </div>\n\n        <div>\n          <Heading size=\"xs\">Functions</Heading>\n          <Paragraph>{career.functions}</Paragraph>\n        </div>\n\n        {!!career.achievements?.length && <div className=\"achievements\">\n          <Heading size=\"xs\">My achievements</Heading>\n          <div className=\"list\">\n            {career.achievements.map((achievement) => (\n              <Item icon=\"diamond-alt\" text={achievement} />\n            ))}\n          </div>\n        </div>}\n      </div>\n      <style jsx>{`\n        .job {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          gap: 25px;\n        }\n\n        .achievements {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n\n        .header {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n          align-items: center;\n        }\n\n        @media (min-width: 1140px) {\n          .job {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n            gap: 35px;\n          }\n\n          .achievements {\n            grid-column: 2;\n            grid-row: 1/5;\n          }\n\n          .achievements > :global(.heading) {\n            margin-left: 25px;\n          }\n\n          .header {\n            align-items: flex-start;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default Job;\n"]},"metadata":{},"sourceType":"module"}