:root {
	--golden-yellow: #f7df1d;
	--scooter: #36b7c9;
	--blue: #43B1F8;
	--black: #000;
	--storm-dust: #616161;
	--bunker: #1A1A1A;
	--white: #fff;
	--concrete: #f3f1f1;
	--gray: #B3B3B3;
	--light-cream: #FEFADF;
	
	/* Theme variables */
	--background: var(--white);
	--text: var(--black);
	--text-inverted: var(--white);
	--primary: var(--scooter);
	--secondary: var(--storm-dust);
	--paragraph-primary: var(--storm-dust);
	--paragraph-secondary: var(--black);
	--heading-secondary: var(--scooter);
	--carousel-nav-bg: rgba(255, 255, 255, 0.8);
  --logo-shadow: rgba(255, 255, 255, 0.9);
  }
  
  /* SASS mixins for theme variables */
  @mixin dark-theme {
    --background: var(--bunker);
    --text: var(--white);
    --text-inverted: var(--black);
    --primary: var(--light-cream);
    --secondary: var(--concrete);
    --paragraph-primary: var(--light-cream);
    --paragraph-secondary: var(--black);
    --heading-secondary: var(--blue);
    --carousel-nav-bg: rgba(26, 26, 26, 0.85);
    --logo-shadow: rgba(0, 0, 0, 0.9);
  }
  
  @mixin light-theme {
    --background: var(--white);
    --text: var(--black);
    --text-inverted: var(--white);
    --primary: var(--scooter);
    --secondary: var(--storm-dust);
    --paragraph-primary: var(--storm-dust);
    --paragraph-secondary: var(--black);
    --heading-secondary: var(--scooter);
    --carousel-nav-bg: rgba(255, 255, 255, 0.8);
  }
  
  /* Apply dark theme based on system preferences */
  @media (prefers-color-scheme: dark) {
    :root:not(.freeze-mode):not(.user-theme) {
      @include dark-theme;
    }
  }
  
  /* User preference (from localStorage) takes precedence */
  :root.dark {
    @include dark-theme;
  }
  
  .freeze-mode {
    @include light-theme;
  }
  
  html {
	font-size: 12px;
  }
  
  html, #__next {
	  height: 100%;
  }
  
  body {
    position: relative;
    background-color: var(--background);
    color: var(--text);
  }

  body.footer-visible {
	  background-color: var(--black);
  }

  body.footer-visible::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--background);
    z-index: -1;
  }

/* ============================================
   PRINT STYLES
   ============================================ */

@media print {
  /* Page setup */
  @page {
    size: A4;
    margin: 12mm;
  }

  /* Force color printing - preserve backgrounds and colors */
  * {
    -webkit-print-color-adjust: exact !important;
    print-color-adjust: exact !important;
    color-adjust: exact !important;
  }

  /* Remove animations and transitions */
  *,
  *::before,
  *::after {
    animation: none !important;
    transition: none !important;
  }

  /* Root and body adjustments */
  html {
    font-size: 10px;
  }

  body {
    background-color: var(--background) !important;
  }

  body.footer-visible {
    background-color: var(--background) !important;
  }

  body.footer-visible::before {
    display: none;
  }

  /* Hide interactive elements */
  .theme-toggle-container {
    display: none !important;
  }

  /* Carousel-specific print adjustments */
  .carousel-nav {
    display: none !important;
  }

  /* Ensure images print correctly */
  img {
    max-width: 100% !important;
    height: auto !important;
    page-break-inside: avoid;
    break-inside: avoid;
  }

  /* Remove only sticky/fixed positioning - preserve relative, absolute, flex, grid */
  .carousel-nav {
    position: relative !important;
  }

  /* Preserve layout systems */
  .cards,
  .job,
  .masonry-container,
  [style*="display: flex"],
  [style*="display: grid"] {
    display: inherit !important;
  }

  /* Ensure flexbox layouts work in print */
  .cards {
    display: flex !important;
    flex-wrap: wrap !important;
    justify-content: space-between !important;
  }

  /* Section headings - left align for print */
  .heading.is-centered {
    text-align: left !important;
  }

  /* Ensure grid layouts work in print - Career 2 column layout */
  .job {
    display: grid !important;
    grid-template-columns: 1fr 1fr !important;
    gap: 35px !important;
    grid-template-areas:
      "header achievements"
      "about achievements"
      "functions achievements" !important;
  }

  .job .header {
    grid-area: header !important;
    align-items: flex-start !important;
  }

  /* Company logo sizing in print */
  .job .header .logo {
    max-width: 200px !important;
    width: 100% !important;
    height: auto !important;
  }

  /* URL left alignment */
  .job .header a {
    text-align: left !important;
    align-self: flex-start !important;
  }

  .job > div:nth-child(2) {
    grid-area: about !important;
  }

  .job > div:nth-child(3) {
    grid-area: functions !important;
  }

  .job .achievements {
    grid-area: achievements !important;
    grid-column: 2 !important;
    grid-row: 1 / 5 !important;
  }

  .job .achievements .list {
    display: flex !important;
    flex-direction: column !important;
  }

  /* SkillList grid layout - 2 columns for skills/frameworks */
  .print-content .list {
    display: grid !important;
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 20px !important;
  }

  /* Override for achievements list - single column */
  .job .achievements .list {
    display: flex !important;
    flex-direction: column !important;
    grid-template-columns: 1fr !important;
  }

  /* Knowledge/Volunteer sections - each subsection as separate block */
  .print-content {
    margin-bottom: 35px !important;
    padding-bottom: 10px !important;
    border-bottom: 1px solid transparent !important;
  }

  .print-section-title {
    margin-bottom: 15px !important;
    break-after: avoid !important;
    page-break-after: avoid !important;
    font-weight: 700 !important;
  }

  /* Ensure items within masonry render correctly */
  .print-content .masonry-container .item {
    margin-bottom: 0 !important;
  }

  /* Card sizing for print */
  .card {
    width: 100% !important;
    max-width: 100% !important;
    break-inside: avoid !important;
    page-break-inside: avoid !important;
  }

  /* Links - remove underlines */
  a {
    text-decoration: none;
  }

  /* Optimize spacing for print */
  .container {
    gap: 30px !important;
  }

  /* Ensure proper contrast for print */
  h1, h2, h3, h4, h5, h6, p, span, div {
    color: inherit;
  }

  /* SVG and icon adjustments */
  svg {
    max-width: 100%;
    height: auto;
  }

  /* Remove shadows and effects that may not print well */
  header {
    box-shadow: none !important;
    min-height: auto !important;
  }

  /* Hero photo sizing for print */
  header .photo {
    max-width: 400px !important;
    max-height: 400px !important;
    object-fit: contain !important;
  }

  /* Print content spacing */
  .print-content {
    margin-bottom: 30px !important;
  }

  /* Print section titles */
  .print-section-title {
    break-after: avoid !important;
    page-break-after: avoid !important;
  }

  /* Ensure proper widths for print */
  .cards .card {
    flex: 1 1 30% !important;
    min-width: 200px !important;
  }

  /* Footer adjustments for print */
  footer {
    break-before: page;
    page-break-before: always;
  }

  /* ============================================
     PAGE BREAK UTILITIES
     Use these classes to control page breaks
     ============================================ */

  /* Avoid breaking inside an element */
  .avoid-break,
  .no-break {
    break-inside: avoid !important;
    page-break-inside: avoid !important;
  }

  /* Force page break before an element */
  .break-before {
    break-before: page !important;
    page-break-before: always !important;
  }

  /* Force page break after an element */
  .break-after {
    break-after: page !important;
    page-break-after: always !important;
  }

  /* Avoid page break before an element */
  .avoid-break-before {
    break-before: avoid !important;
    page-break-before: avoid !important;
  }

  /* Avoid page break after an element */
  .avoid-break-after {
    break-after: avoid !important;
    page-break-after: avoid !important;
  }

  /* Keep element with next element (avoid orphans) */
  .keep-with-next {
    break-after: avoid !important;
    page-break-after: avoid !important;
  }

  /* Keep element with previous element (avoid widows) */
  .keep-with-previous {
    break-before: avoid !important;
    page-break-before: avoid !important;
  }
}